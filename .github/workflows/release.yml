name: Release

on:
  push:
    branches:
      - dev
      - main

jobs:
  upload-release:
    runs-on: ubuntu-latest
    needs: [build-macos, build-linux, build-windows]

    steps:
    - uses: actions/checkout@v1
    - name: download artifacts
      uses: actions/download-artifact@v4
      with:
        path: .
    - name: Get version
      id: get-version
      run: |
        echo "VERSION=$(bash version.sh)" >> $GITHUB_ENV

        mkdir -p builds/{darwin,linux,windows}

        mv valradar-darwin/valradar builds/darwin/valradar
        mv valradar-linux/valradar builds/linux/valradar
        mv valradar-windows/valradar.exe builds/windows/valradar.exe
        zip -r builds/{darwin,linux,windows}/modules.zip modules

        ls -R builds

        zip -r builds/{darwin,linux,windows}.zip builds/{darwin,linux,windows}
    - name: upload prerelease artifacts
      if: github.ref == 'refs/heads/dev'
      id: upload-prerelease-artifacts
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        token: ${{ secrets.TOKEN }}
        prerelease: true
        tag_name: ${{ env.VERSION }}-dev-${{ github.sha }}
        files: |
          ./builds/darwin.zip
          ./builds/linux.zip
          ./builds/windows.zip
    - name: upload release artifacts
      if: github.ref == 'refs/heads/main'
      id: upload-release-artifacts
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        token: ${{ secrets.TOKEN }}
        tag_name: ${{ env.VERSION }}
        files: |
          ./builds/darwin.zip
          ./builds/linux.zip
          ./builds/windows.zip
  
  build-macos:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v1
    - name: Use Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Build
      run: |
        PYO3_USE_ABI3_FORWARD_COMPATIBILITY=1 cargo build --release
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: valradar-darwin
        path: target/release/valradar

  build-linux:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Use Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Build
      run: |
        cargo build --release
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: valradar-linux
        path: target/release/valradar

  build-windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1
    - name: Use Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Build
      run: |
        cargo build --release
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: valradar-windows
        path: target/release/valradar.exe
